{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Entrepreneurship for Computer Scientists and Engineers","text":"<p>Our course, \"Entrepreneurship for Computer Scientists and Engineers,\" at Amirkabir University of Technology provides a comprehensive foundation in entrepreneurial thinking, innovation strategies, and venture creation tailored specifically for students in technical disciplines. Through a blend of theoretical frameworks and hands-on projects, participants learn how to identify market opportunities, develop scalable solutions, and navigate the startup ecosystem. The curriculum emphasizes interdisciplinary collaboration, lean startup methodology, and the ethical and societal impact of technology-driven ventures\u2014empowering future engineers and computer scientists to become visionary founders and changemakers.</p>"},{"location":"#course-objectives","title":"Course Objectives","text":"<p>This course aims to:</p>"},{"location":"#--develop-problem-solving-skills-and-algorithmic-thinking-essential-for-programming","title":"- Develop problem-solving skills and algorithmic thinking essential for programming.","text":""},{"location":"#learning-outcomes","title":"Learning Outcomes","text":"<ul> <li> <p>By the end of the course, students will:</p> <ul> <li>Develop real-world applications using C programming skills.</li> </ul> </li> </ul>"},{"location":"#course-outline","title":"Course Outline","text":""},{"location":"#1-introduction-to-computing","title":"1. Introduction to Computing","text":"<ul> <li>Fundamentals of computing</li> <li>Historical perspective and early computers</li> <li>Overview of hardware, software, and the Internet</li> </ul>"},{"location":"#2-introduction-to-c-programming","title":"2. Introduction to C Programming","text":"<ul> <li>Basics of C programming</li> <li>Input/output operations</li> <li>Data types and arithmetic operations</li> </ul>"},{"location":"#3-decision-making-statements","title":"3. Decision-Making Statements","text":"<ul> <li><code>if</code>, <code>if-else</code>, and nested <code>if</code></li> <li><code>switch</code> statements for multi-way branching</li> <li>Logical operators and expressions</li> </ul>"},{"location":"#4-repetition-statements","title":"4. Repetition Statements","text":"<ul> <li><code>for</code> loops for counter-controlled repetition</li> <li><code>while</code> loops for condition-controlled repetition</li> <li><code>do-while</code> loops for post-condition checks</li> <li>Break and continue statements for loop control</li> </ul>"},{"location":"#5-structured-program-development","title":"5. Structured Program Development","text":"<ul> <li>Algorithm development and problem-solving</li> <li>Functions and recursion</li> <li>Enumerations and random-number generation</li> </ul>"},{"location":"#team","title":"Team","text":""},{"location":"#instructor","title":"Instructor","text":"<p>Morteza Zakeri\u2020</p> <p>\u2020 Ph.D. in Computer Science, ACM Member (<code>mzakeri-nasrabadi[at]acm.org</code>).</p>"},{"location":"#teaching-assistants","title":"Teaching Assistants","text":"<ul> <li>TA Head (Fall 2025): Javad Besharati-far</li> <li></li> </ul>"},{"location":"#additional-information","title":"Additional Information","text":"<ul> <li>Prerequisites: No prior programming experience required. Familiarity with basic mathematics will be beneficial.</li> <li>Assessment Methods: Graded assignments, quizzes, practical programming tasks, paper-based exams, laboratory classes, and a final project.</li> <li>Recommended Textbook: C How to Program, 9/e by Paul Deitel and Harvey Deitel.</li> </ul>"},{"location":"#references","title":"References","text":""},{"location":"#main-textbooks","title":"Main textbooks","text":"<ol> <li>Paul Deitel and Harvey Deitel, C How to Program, Ninth Edition, 2022.</li> </ol> <p>The book C How to Program, Ninth Edition by Paul Deitel and Harvey Deitel is a comprehensive guide to C programming. It offers a code-intensive, case-study-oriented approach suitable for both introductory and intermediate-level courses. The book covers a wide range of topics, including problem-solving, algorithm development, control statements, functions, arrays, pointers, and data structures. It also includes over 140 complete working programs, real-world examples, and self-check exercises to reinforce learning. </p> <p></p> <p></p> <ol> <li>R. White, How Computers Work: The Evolution of Technology, 10th ed. Indianapolis, IN, USA: Que Publishing, 2014.</li> </ol> <p>How Computers Work: The Evolution of Technology by Ron White is a visually engaging and comprehensive guide to understanding the inner workings of computers and modern technology. The book explores the evolution of computing devices, from early machines to today's smartphones, tablets, and wearable tech. It features detailed illustrations and jargon-free explanations, making complex concepts accessible to readers of all technical levels. Topics include hardware, software, miniaturization, quantum physics applications, and the impact of technology on daily life.</p>"},{"location":"#helpful-textbooks","title":"Helpful textbooks","text":"<ol> <li> <p>B. W. Kernighan and D. M. Ritchie, The C Programming Language, 2nd ed. Upper Saddle River, NJ, USA: Prentice Hall, 1988.</p> </li> <li> <p>H. Schildt, C: The Complete Reference, 4th ed. New York, NY, USA: McGraw-Hill, 2000.</p> </li> </ol>"},{"location":"announcements/","title":"Announcements","text":"<ul> <li>2024-02-24: A set of problems with solutions are available at Problems page.</li> <li>2024-02-01: Slides (Spring 2024) are available on Lectures page.</li> </ul>"},{"location":"assignments/","title":"Writing Assignments","text":""},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2025/05/17/comparison-of-c-and-c-differences-applications-and-advantages/","title":"Comparison of C and C++: Differences, Applications, and Advantages","text":"<p>In the programming world, the languages C and C++ play a very important role. Both languages share many similarities, but their key differences have led each to be more popular in specific areas. In this post, we will examine the differences, applications, and advantages of each language.</p>"},{"location":"blog/2025/05/17/comparison-of-c-and-c-differences-applications-and-advantages/#-history-and-design-philosophy","title":"\ud83d\udd39 History and Design Philosophy","text":"<ul> <li>C was developed in the 1970s by Dennis Ritchie at Bell Labs. The goal of this language was to create a low-level language with flexible capabilities for the UNIX operating system.</li> <li>C++ was developed in the 1980s by Bjarne Stroustrup. By incorporating object-oriented programming into C, this language provides developers with enhanced capabilities.</li> </ul> <p>A sample \"Hello World!\" program in each language is shown in the code snippets below.</p> CC++ <pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\n  printf(\"Hello world!\\n\");\n  return 0;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\n\nint main(void) {\n  std::cout &lt;&lt; \"Hello world!\" &lt;&lt; std::endl;\n  return 0;\n}\n</code></pre>"},{"location":"blog/2025/05/17/comparison-of-c-and-c-differences-applications-and-advantages/#-key-differences-between-c-and-c","title":"\ud83d\udd39 Key Differences Between C and C++","text":"Feature C C++ Programming Paradigm Procedural Object-oriented + Procedural Memory Management Manual (<code>malloc</code>, <code>free</code>) Automatic (<code>new</code>, <code>delete</code> plus smart pointer features) Classes and Objects Not supported Supported Standard Library Limited (<code>stdio.h</code>, <code>stdlib.h</code>) More extensive (STL including <code>vector</code>, <code>map</code>, <code>set</code>) Type Safety Lower Higher (e.g., function overloading, type safety mechanisms) Execution Speed Faster (with minimal overhead) Slightly slower (due to object-oriented abstractions) Primary Use Case Operating systems, drivers, low-level software Complex software, games, graphics engines, scientific tools"},{"location":"blog/2025/05/17/comparison-of-c-and-c-differences-applications-and-advantages/#-applications-of-c-and-c","title":"\ud83d\udd39 Applications of C and C++","text":"<p>\u2705 C: - Development of operating systems (e.g., UNIX and Linux) - Low-level programming and management of memory and hardware - Microcontrollers and embedded systems - Development of compilers and language processors</p> <p>\u2705 C++: - Development of complex software and software engineering tools - Design of computer games and graphics engines (e.g., Unreal Engine) - Artificial intelligence and processing of complex data - Financial applications and numerical computations</p>"},{"location":"blog/2025/05/17/comparison-of-c-and-c-differences-applications-and-advantages/#-is-c-a-replacement-for-c","title":"\ud83d\udd39 Is C++ a Replacement for C?","text":"<p>No! While C++ offers advanced features such as object-oriented programming, improved memory management, and the use of templates, C remains the best choice for projects that require complete control over the hardware.</p> <p>Therefore, choosing between C and C++ depends on the needs of your project! If you are developing a low-level system, C is the better option. If you require flexible and object-oriented features, C++ is the right choice.</p> <p>\ud83d\udccc Which language do you use more? What are your thoughts on the differences between C and C++?</p>"},{"location":"blog/2025/01/31/welcome-to-c-programming-course/","title":"Welcome to C Programming Course","text":""},{"location":"blog/2025/01/31/welcome-to-c-programming-course/#welcome-to-the-fundamentals-of-computer-and-programming-in-c-course","title":"Welcome to the Fundamentals of Computer and Programming in C Course!","text":"<p>Hello, and welcome to one of the most exciting learning journeys at Amirkabir University of Technology\u2014Fundamentals of Computer and Programming in C! I am thrilled to have the opportunity to guide you through the fascinating world of computing and programming, a cornerstone of modern innovation.</p> <p>This course is specially designed to lay a solid foundation for your programming skills, starting with the basics and gradually delving into advanced concepts. Whether you're new to programming or looking to strengthen your understanding, this course will provide you with the tools and confidence to think like a computer scientist. From mastering decision-making and loops to exploring pointers, data structures, and file handling, we\u2019ll unravel the secrets of problem-solving and algorithmic thinking together.</p> <p></p> <p>Our approach blends theory with hands-on practice to ensure you gain practical skills that are directly applicable to real-world challenges. Along the way, you'll be engaging in projects, exploring case studies, and applying your knowledge to build efficient, modular, and maintainable programs. All of this will be guided by the renowned textbook C How to Program by Paul Deitel and Harvey Deitel, which serves as our anchor throughout the course.</p> <p>Beyond programming, this course aims to foster your curiosity, creativity, and critical thinking\u2014skills that will prove invaluable not just in computer science but in countless other fields. You\u2019ll also find a community here that encourages collaboration, questions, and growth.</p> <p>I\u2019m eager to see each of you thrive, and I look forward to supporting you as we tackle this adventure together. Let\u2019s code, learn, and make a difference. Welcome aboard!  </p> <p>Here\u2019s to an amazing semester!</p> <p>Warm regards, Morteza Zakeri Assistant Professor, Amirkabir University of Technology Instructor, Fundamentals of Computer and Programming in C  </p>"},{"location":"calendar/","title":"Calendar","text":""},{"location":"calendar/#spring-2025","title":"Spring 2025","text":"<p>To be announced by the TA team. </p> <ul> <li> <p>Jalali calendar Persian </p> </li> <li> <p>Gregorian calendar English</p> </li> </ul>"},{"location":"calendar/#spring-2024","title":"Spring 2024","text":"<ul> <li>Jalali calendar Persian </li> </ul> <ul> <li>Gregorian calendar English</li> </ul>"},{"location":"lectures/","title":"Lectures","text":"<p>Students should use the latest version of the course slides, i.e., current semester slides.</p>"},{"location":"lectures/#spring-2025","title":"Spring 2025","text":""},{"location":"lectures/#main-class","title":"Main class","text":"<ul> <li>Lecture 2: Structured Programming and Algorithm Design ( PDF |  Code Snippets)</li> <li>Lecture 3: </li> </ul> <p>To be completed.</p>"},{"location":"lectures/#laboratory-class","title":"Laboratory class","text":"<p>To be announced.</p>"},{"location":"lectures/#spring-2024","title":"Spring 2024","text":""},{"location":"lectures/#main-class_1","title":"Main class","text":"<ol> <li>Introduction (PDF | PPTX)</li> <li>Algorithm design (PDF | PPTX)</li> <li>C Programming Basics (PDF | PPTX)</li> <li>Calculations (PDF | PPTX)</li> <li>Interaction (PDF | PPTX)</li> <li>Making Decisions (PDF | PPTX)</li> <li>Repeating Statements (PDF | PPTX)</li> <li>Functions (PDF | PPTX)</li> <li>Arrays (PDF | PPTX)</li> <li>Pointers  Dynamic Memory (PDF |  PPTX)</li> <li>Structures (PDF | PPTX)</li> <li>Files (PDF | PPTX) </li> <li>Miscellaneous (PDF | PPTX)</li> <li>Introduction to C++ (PDF | PPTX)</li> <li>Summary (To be added)</li> </ol>"},{"location":"lectures/#laboratory-class_1","title":"Laboratory class","text":"<ol> <li>Introduction (Part 1)</li> <li>Introduction (Part 2)</li> <li>Pseudocode</li> <li>Pseudocode and input-output (IO)</li> <li>IO and math </li> <li>Decision</li> <li>Loop</li> <li>Function</li> <li>Array</li> <li>Pointer_part1</li> <li>Pointer_part2 </li> <li>Struct</li> <li>File</li> </ol>"},{"location":"lectures/#ta-class","title":"TA class","text":"<ol> <li>Git and Bash ( PPTX)</li> <li></li> </ol>"},{"location":"problems/","title":"Problems","text":""},{"location":"problems/#problems-with-solutions","title":"Problems with Solutions","text":"<p>This section contains a set of diverse programming questions with their solution in C language. </p>"},{"location":"problems/#easy-questions","title":"Easy questions","text":"<ol> <li>Vlad and the Best of Five --- Solution</li> <li>Face to face in the subway --- Solution</li> <li>Circle city --- Solution</li> <li>Khayyam-Pascal's triangle --- Solution</li> <li>The lost point --- Solution</li> </ol>"},{"location":"problems/#mid-level-questions","title":"Mid-level questions","text":"<ol> <li>Vlad and Shapes --- Solution</li> <li>Vlad and a Sum of Sum of Digits --- Solution</li> </ol>"},{"location":"problems/#difficult-questions","title":"Difficult questions","text":"<ol> <li>Q1 </li> </ol>"},{"location":"problems/#link-to-extended-sets-of-problems-with-solutions","title":"Link to extended sets of problems with solutions","text":"<ol> <li>C Programming Exercises, Practice, Solution</li> <li>C Programs with Solutions</li> </ol>"},{"location":"problems/#sample-paper-based-exams","title":"Sample paper-based exams","text":"<ol> <li> Midterm exam - Spring 2024</li> </ol>"},{"location":"projects/","title":"Projects","text":""},{"location":"projects/#spring-2025","title":"Spring 2025","text":"<ul> <li>Proposal for Spring 2025</li> </ul>"},{"location":"projects/#spring-2024","title":"Spring 2024","text":"<ul> <li>Proposal for Spring 2024</li> </ul>"},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/category/blog/","title":"Blog","text":""}]}